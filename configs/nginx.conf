# 초고정밀 OCR 시스템 Nginx 설정

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 로그 형식 설정
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    # 기본 설정
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # GZIP 압축
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # 업로드 크기 제한
    client_max_body_size 20M;

    # SSL 설정
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # DH 매개변수
    # ssl_dhparam /etc/nginx/dhparam.pem;

    # OCSP 스테이플링
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # 기본 HTTP 서버 (HTTPS로 리다이렉트)
    server {
        listen 80;
        listen [::]:80;
        server_name ocr.example.com;

        # HTTPS로 리다이렉트
        location / {
            return 301 https://$host$request_uri;
        }

        # Let's Encrypt 인증
        location /.well-known/acme-challenge/ {
            root /var/www/html;
        }
    }

    # 주 HTTPS 서버
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name ocr.example.com;

        # SSL 인증서
        ssl_certificate /etc/letsencrypt/live/ocr.example.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/ocr.example.com/privkey.pem;

        # 보안 헤더
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-Content-Type-Options "nosniff";
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "strict-origin-when-cross-origin";

        # 루트 디렉토리
        root /usr/share/nginx/html;
        index index.html;

        # API 및 웹 애플리케이션 프록시
        location / {
            proxy_pass http://app:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket 지원
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # 타임아웃 설정 (OCR 처리 시간 고려)
            proxy_read_timeout 300s;
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
        }

        # 정적 파일
        location /static/ {
            alias /app/src/web/static/;
            expires 1d;
            add_header Cache-Control "public, max-age=86400";
        }

        # 업로드된 파일
        location /storage/ {
            alias /app/storage/;
            expires 1h;
            add_header Cache-Control "public, max-age=3600";
            add_header Content-Disposition "inline";
        }

        # API 문서
        location /api/docs {
            proxy_pass http://app:8000/api/docs;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # 상태 확인
        location /status {
            proxy_pass http://app:8000/status;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            access_log off;
            allow 127.0.0.1;
            deny all;
        }

        # 오류 페이지
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}
